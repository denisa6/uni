The words - predefined tokens are specified between " and ":
program ::= "MAIN" "[" decllist "]" "(" stmtlist ")"
func ::= "DEF" "[" decllist "]" "(" stmtlist ")"
decllist := declaration | declaration ";" decllist
declaration ::= IDENTIFIER type
type1 ::= "CHAR" | "INT" | "STR"
arraydecl ::= "ARR" "<" type1 ">" "[" nr "]"
type  ::= type1 | arraydecl
stmtlist ::= stmt | stmt ";" stmtlist | func
stmt ::= simplstmt | structstmt
simplstmt ::= assignstmt | iostmt
assignstmt ::= IDENTIFIER "=" expression
expression ::= expression "+" term | expression "-" term | term
term ::= term "*" factor | term "/" factor | factor
factor ::= "[" expression "]" | IDENTIFIER
iostmt ::= "READ" | "PRINT" "[" IDENTIFIER "]"
structstmt ::= stmtlist | ifstmt | whilestmt | forstmt
ifstmt ::= "IF" "[" condition "]" "(" stmtlist ")" "ELSE" "(" stmtlist ")"
whilestmt ::= "WHILE" "[" condition "]" "DO" "(" stmtlist ")"
forstmt ::= "FOR" "[" condition "]" "(" stmtlist ")"
condition ::= expression RELATION expression
RELATION ::= "<" | "<=" | "=" | "!=" | ">=" | ">"